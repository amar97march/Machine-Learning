q()
install.packages('ggplot2')
install.packages('ggplot2')
library("ggplot2", lib.loc="~/R/win-library/3.4")
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = trainingset$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
#Simple linear regression
#Importing the dataset
dataset = read.csv('Salary_Data.csv')
#missing dataset
#encoding categorical data
#splitting dataset
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3) #for training set
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#feature scaling
# training_set[,2:3] = scale(training_set[,2:3])
# test_set[, 2:3] = scale(test_set[,2:3])
#Fitting simple linear regressio to training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#Predicting the test set results
Y_pred = predict(regressor, newdata = test_set)
#Visualing the training set results
# install.packages('ggplot2')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
setwd("C:/Users/user/Desktop/MachineLearning/worked on/Part 2 - Regression/Section 4 - Simple Linear Regression")
#Simple linear regression
#Importing the dataset
dataset = read.csv('Salary_Data.csv')
#missing dataset
#encoding categorical data
#splitting dataset
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3) #for training set
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#feature scaling
# training_set[,2:3] = scale(training_set[,2:3])
# test_set[, 2:3] = scale(test_set[,2:3])
#Fitting simple linear regressio to training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#Predicting the test set results
Y_pred = predict(regressor, newdata = test_set)
#Visualing the training set results
# install.packages('ggplot2')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red')
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue')
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
ggtitle('Salary vs YearsExperience (training set)')
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3) #for training set
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
library("caTools", lib.loc="~/R/win-library/3.4")
#Simple linear regression
#Importing the dataset
dataset = read.csv('Salary_Data.csv')
#missing dataset
#encoding categorical data
#splitting dataset
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3) #for training set
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#feature scaling
# training_set[,2:3] = scale(training_set[,2:3])
# test_set[, 2:3] = scale(test_set[,2:3])
#Fitting simple linear regressio to training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#Predicting the test set results
Y_pred = predict(regressor, newdata = test_set)
#Visualing the training set results
# install.packages('ggplot2')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs YearsExperience (training set)') +
xlab('YearsExperience') +
ylab('salary')
setwd("C:/Users/user/Desktop/MachineLearning/worked on/Part 2 - Regression/Section 5 - Multiple Linear Regression")
dataset = read.csv('50_Startups.csv')
View(dataset)
dataset$State = factor(dataset$State,
levels = c('NewYork', 'Califoria', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8) #for training set
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(training_set)
View(test_set)
View(dataset)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
Y_pred = predict(regressor, newdata = test_set)
Y_pred
View(test_set)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend ,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
